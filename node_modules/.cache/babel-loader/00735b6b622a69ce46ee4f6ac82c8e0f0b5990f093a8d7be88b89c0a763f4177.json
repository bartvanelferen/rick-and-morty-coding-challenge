{"ast":null,"code":"var _jsxFileName = \"/Users/bartvanelferen/Desktop/Projects/rick-and-morty-app/src/components/Episodes/EpisodesList/EpisodesListCharacter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterInfo = ({\n  characterUrl\n}) => {\n  _s();\n  const [character, setCharacter] = useState(null);\n  const fetchCharacterData = async () => {\n    try {\n      const response = await fetch(characterUrl);\n      const data = await response.json();\n      setCharacter(data);\n    } catch (error) {\n      console.error('Error fetching character:', error);\n    }\n  };\n  useEffect(() => {\n    void fetchCharacterData();\n  }, [characterUrl]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: `${character === null || character === void 0 ? void 0 : character.origin.name}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(CharacterInfo, \"U6X0dPsAgyZIXj6OlfE1MnnJ0Cg=\");\n_c = CharacterInfo;\nexport default CharacterInfo;\nvar _c;\n$RefreshReg$(_c, \"CharacterInfo\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CharacterInfo","characterUrl","_s","character","setCharacter","fetchCharacterData","response","fetch","data","json","error","console","children","origin","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bartvanelferen/Desktop/Projects/rick-and-morty-app/src/components/Episodes/EpisodesList/EpisodesListCharacter.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\ninterface Character {\n    id: number;\n    name: string;\n    origin: {\n        name: string;\n        url: string;\n    };\n}\n\nconst CharacterInfo: React.FC<{ characterUrl: string }> = ({ characterUrl }) => {\n    const [character, setCharacter] = useState<Character | null>(null);\n\n    const fetchCharacterData = async () => {\n        try {\n            const response = await fetch(characterUrl);\n            const data = await response.json();\n            setCharacter(data);\n        } catch (error) {\n            console.error('Error fetching character:', error);\n        }\n    };\n\n    useEffect(() => {\n        void fetchCharacterData();\n    }, [characterUrl]);\n\n    return (\n        <span>{`${character?.origin.name}`}</span>\n    );\n};\n\nexport default CharacterInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWjD,MAAMC,aAAiD,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAmB,IAAI,CAAC;EAElE,MAAMQ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,YAAY,CAAC;MAC1C,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAACI,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZ,KAAKS,kBAAkB,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,oBACIF,OAAA;IAAAa,QAAA,EAAQ,GAAET,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEU,MAAM,CAACC,IAAK;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAElD,CAAC;AAAChB,EAAA,CApBIF,aAAiD;AAAAmB,EAAA,GAAjDnB,aAAiD;AAsBvD,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}