{"ast":null,"code":"var _jsxFileName = \"/Users/bartvanelferen/Desktop/Projects/rick-and-morty-app/src/components/Episodes/EpisodesList/EpisodesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API_URL, ENDPOINTS } from '../../../global/Constants';\nimport axios from 'axios';\nimport '../../../assets/styles/components/EpisodesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodesList = () => {\n  _s();\n  // Get all IDs based on fixed number that is known and ascending, ideally must be more dynamic.\n  const allLocationIDs = Array.from({\n    length: 126\n  }, (_, index) => index + 1);\n  const allCharactersIDs = Array.from({\n    length: 826\n  }, (_, index) => index + 1);\n  const allEpisodesIDs = Array.from({\n    length: 51\n  }, (_, index) => index + 1);\n  const [allData, setAllData] = useState(null);\n  const fetchAllData = async () => {\n    try {\n      // Fetch data from API 1\n      const response1 = await axios.get(`${API_URL}${ENDPOINTS.locations}/${allLocationIDs.join(',')}`);\n      const api1Data = response1.data;\n\n      // Fetch data from API 2\n      const response2 = await axios.get(`${API_URL}${ENDPOINTS.characters}/${allCharactersIDs.join(',')}`);\n      const api2Data = response2.data;\n\n      // Fetch data from API 3\n      const response3 = await axios.get(`${API_URL}${ENDPOINTS.episodes}/${allEpisodesIDs.join(',')}`);\n      const api3Data = response3.data;\n\n      // Set the data in the state\n      setAllData({\n        api1Data,\n        api2Data,\n        api3Data\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    void fetchAllData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top 10 Episodes with Highest Count of Unique Characters' Origin Dimensions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(EpisodesList, \"upnytrp6AOtYZ/xX5jMNYzp9Fzo=\");\n_c = EpisodesList;\nexport default EpisodesList;\nvar _c;\n$RefreshReg$(_c, \"EpisodesList\");","map":{"version":3,"names":["React","useEffect","useState","API_URL","ENDPOINTS","axios","jsxDEV","_jsxDEV","EpisodesList","_s","allLocationIDs","Array","from","length","_","index","allCharactersIDs","allEpisodesIDs","allData","setAllData","fetchAllData","response1","get","locations","join","api1Data","data","response2","characters","api2Data","response3","episodes","api3Data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bartvanelferen/Desktop/Projects/rick-and-morty-app/src/components/Episodes/EpisodesList/EpisodesList.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {API_URL, ENDPOINTS} from '../../../global/Constants';\nimport {TopListEpisode} from '../../../global/Interfaces';\nimport EpisodesListCharacter from \"./EpisodesListCharacter\";\nimport axios from 'axios';\nimport '../../../assets/styles/components/EpisodesList.css';\n\ninterface Data {\n    api1Data: any; // Replace 'any' with the actual type of data from API 1\n    api2Data: any; // Replace 'any' with the actual type of data from API 2\n    api3Data: any; // Replace 'any' with the actual type of data from API 3\n}\n\nconst EpisodesList = () => {\n    // Get all IDs based on fixed number that is known and ascending, ideally must be more dynamic.\n    const allLocationIDs = Array.from({length: 126}, (_, index: number) => index + 1);\n    const allCharactersIDs = Array.from({length: 826}, (_, index: number) => index + 1);\n    const allEpisodesIDs = Array.from({length: 51}, (_, index: number) => index + 1);\n\n    const [allData, setAllData] = useState<Data | null>(null);\n\n    const fetchAllData = async (): Promise<void> => {\n        try {\n            // Fetch data from API 1\n            const response1= await axios.get(`${API_URL}${ENDPOINTS.locations}/${allLocationIDs.join(',')}`);\n            const api1Data = response1.data;\n\n            // Fetch data from API 2\n            const response2= await axios.get(`${API_URL}${ENDPOINTS.characters}/${allCharactersIDs.join(',')}`);\n            const api2Data = response2.data;\n\n            // Fetch data from API 3\n            const response3= await axios.get(`${API_URL}${ENDPOINTS.episodes}/${allEpisodesIDs.join(',')}`);\n            const api3Data = response3.data;\n\n            // Set the data in the state\n            setAllData({\n                api1Data,\n                api2Data,\n                api3Data,\n            });\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    useEffect(() => {\n        void fetchAllData();\n    }, []);\n\n    return (\n        <div>\n            <h1>Top 10 Episodes with Highest Count of Unique Characters' Origin Dimensions</h1>\n            {/*{getTopEpisodes()}*/}\n        </div>\n    );\n};\n\nexport default EpisodesList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,OAAO,EAAEC,SAAS,QAAO,2BAA2B;AAG5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAMC,cAAc,GAAGC,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAa,KAAKA,KAAK,GAAG,CAAC,CAAC;EACjF,MAAMC,gBAAgB,GAAGL,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAa,KAAKA,KAAK,GAAG,CAAC,CAAC;EACnF,MAAME,cAAc,GAAGN,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAa,KAAKA,KAAK,GAAG,CAAC,CAAC;EAEhF,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAc,IAAI,CAAC;EAEzD,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAA2B;IAC5C,IAAI;MACA;MACA,MAAMC,SAAS,GAAE,MAAMhB,KAAK,CAACiB,GAAG,CAAE,GAAEnB,OAAQ,GAAEC,SAAS,CAACmB,SAAU,IAAGb,cAAc,CAACc,IAAI,CAAC,GAAG,CAAE,EAAC,CAAC;MAChG,MAAMC,QAAQ,GAAGJ,SAAS,CAACK,IAAI;;MAE/B;MACA,MAAMC,SAAS,GAAE,MAAMtB,KAAK,CAACiB,GAAG,CAAE,GAAEnB,OAAQ,GAAEC,SAAS,CAACwB,UAAW,IAAGZ,gBAAgB,CAACQ,IAAI,CAAC,GAAG,CAAE,EAAC,CAAC;MACnG,MAAMK,QAAQ,GAAGF,SAAS,CAACD,IAAI;;MAE/B;MACA,MAAMI,SAAS,GAAE,MAAMzB,KAAK,CAACiB,GAAG,CAAE,GAAEnB,OAAQ,GAAEC,SAAS,CAAC2B,QAAS,IAAGd,cAAc,CAACO,IAAI,CAAC,GAAG,CAAE,EAAC,CAAC;MAC/F,MAAMQ,QAAQ,GAAGF,SAAS,CAACJ,IAAI;;MAE/B;MACAP,UAAU,CAAC;QACPM,QAAQ;QACRI,QAAQ;QACRG;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZ,KAAKmB,YAAY,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA;IAAA4B,QAAA,eACI5B,OAAA;MAAA4B,QAAA,EAAI;IAA0E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElF,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA3CID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}