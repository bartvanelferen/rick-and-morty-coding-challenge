{"ast":null,"code":"var _jsxFileName = \"/Users/bartvanelferen/Desktop/Projects/rick-and-morty-app/src/components/Episodes/EpisodesList/EpisodesListCharacter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodesListCharacter = ({\n  episode\n}) => {\n  _s();\n  const [character, setCharacter] = useState(null);\n\n  // const fetchCharacterData = async () => {\n  //     try {\n  //         const response = await fetch(characterUrl);\n  //         const data = await response.json();\n  //         setCharacter(data);\n  //     } catch (error) {\n  //         console.error('Error fetching character:', error);\n  //     }\n  // };\n  //\n  // useEffect(() => {\n  //     void fetchCharacterData();\n  // }, [characterUrl]);\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: `${episode === null || episode === void 0 ? void 0 : episode.name}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(EpisodesListCharacter, \"T6lLM4P4BNGgjYKBEShpn+wnLco=\");\n_c = EpisodesListCharacter;\nexport default EpisodesListCharacter;\nvar _c;\n$RefreshReg$(_c, \"EpisodesListCharacter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EpisodesListCharacter","episode","_s","character","setCharacter","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bartvanelferen/Desktop/Projects/rick-and-morty-app/src/components/Episodes/EpisodesList/EpisodesListCharacter.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { TopListCharacter } from '../../../global/Interfaces';\n\nconst EpisodesListCharacter: React.FC<{ episode: any }> = ({ episode }) => {\n    const [character, setCharacter] = useState<TopListCharacter | null>(null);\n\n    // const fetchCharacterData = async () => {\n    //     try {\n    //         const response = await fetch(characterUrl);\n    //         const data = await response.json();\n    //         setCharacter(data);\n    //     } catch (error) {\n    //         console.error('Error fetching character:', error);\n    //     }\n    // };\n    //\n    // useEffect(() => {\n    //     void fetchCharacterData();\n    // }, [characterUrl]);\n\n    return (\n        <span>{`${episode?.name}`}</span>\n    );\n};\n\nexport default EpisodesListCharacter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAcC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,qBAAiD,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAA0B,IAAI,CAAC;;EAEzE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIE,OAAA;IAAAM,QAAA,EAAQ,GAAEJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,IAAK;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAEzC,CAAC;AAACR,EAAA,CApBIF,qBAAiD;AAAAW,EAAA,GAAjDX,qBAAiD;AAsBvD,eAAeA,qBAAqB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}